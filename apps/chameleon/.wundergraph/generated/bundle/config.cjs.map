{
  "version": 3,
  "sources": ["../../wundergraph.config.ts", "../../wundergraph.generate.ts", "../../wundergraph.operations.ts", "../../wundergraph.server.ts"],
  "sourcesContent": ["import {\n  EnvironmentVariable,\n  configureWunderGraphApplication,\n  cors,\n  introspect,\n} from '@wundergraph/sdk';\n\nimport generate from './wundergraph.generate';\nimport operations from './wundergraph.operations';\nimport server from './wundergraph.server';\n\nconst countries = introspect.graphql({\n  apiNamespace: 'countries',\n  url: 'https://countries.trevorblades.com/',\n});\n\nconst weather = introspect.graphql({\n  id: 'weather',\n  apiNamespace: 'weather',\n  url: 'https://weather-api.wundergraph.com/',\n  introspection: {\n    pollingIntervalSeconds: 5,\n  },\n});\n\nconst db = introspect.prisma({\n  apiNamespace: 'db',\n  prismaFilePath: '../../../data-access/db/prisma/schema.prisma',\n});\n\n// configureWunderGraph emits the configuration\nconfigureWunderGraphApplication({\n  apis: [countries, db, weather],\n  server,\n  operations,\n  generate,\n  cors: {\n    ...cors.allowAll,\n    allowedOrigins:\n      process.env.NODE_ENV === 'production'\n        ? [\n            // change this before deploying to production to the actual domain where you're deploying your app\n            new EnvironmentVariable('NEXTAUTH_URL'),\n            'https://www.chameleon.com',\n            'https://chameleon-production.up.railway.app/',\n          ]\n        : [\n            'http://localhost:3000',\n            new EnvironmentVariable('WG_ALLOWED_ORIGIN'),\n          ],\n  },\n  security: {\n    enableGraphQLEndpoint:\n      process.env.NODE_ENV !== 'production' ||\n      process.env.GITPOD_WORKSPACE_ID !== undefined,\n  },\n});\n", "import { configureWunderGraphGeneration } from '@wundergraph/sdk';\n\nexport default configureWunderGraphGeneration({\n  codeGenerators: [],\n  operationsGenerator: (config) => {\n    config.includeNamespaces('');\n  },\n});\n", "import { configureWunderGraphOperations } from '@wundergraph/sdk';\n\nimport type { OperationsConfiguration } from './generated/wundergraph.operations';\n\nexport default configureWunderGraphOperations<OperationsConfiguration>({\n  operations: {\n    defaultConfig: {\n      authentication: {\n        required: false,\n      },\n    },\n    queries: (config) => ({\n      ...config,\n      caching: {\n        enable: false,\n        staleWhileRevalidate: 5,\n        maxAge: 10,\n        public: true,\n      },\n      liveQuery: {\n        enable: true,\n        pollingIntervalSeconds: 1,\n      },\n    }),\n    mutations: (config) => ({\n      ...config,\n    }),\n    subscriptions: (config) => ({\n      ...config,\n    }),\n    custom: {},\n  },\n});\n", "import { configureWunderGraphServer } from '@wundergraph/sdk/server';\n\nexport default configureWunderGraphServer(() => ({\n  hooks: {\n    queries: {\n      Countries: {\n        preResolve: async ({ operations }) => {},\n      },\n    },\n    mutations: {},\n  },\n}));\n"],
  "mappings": ";;;AAAA,IAAAA,cAKO;;;ACLP,iBAA+C;AAE/C,IAAO,mCAAQ,2CAA+B;AAAA,EAC5C,gBAAgB,CAAC;AAAA,EACjB,qBAAqB,CAAC,WAAW;AAC/B,WAAO,kBAAkB,EAAE;AAAA,EAC7B;AACF,CAAC;;;ACPD,IAAAC,cAA+C;AAI/C,IAAO,qCAAQ,4CAAwD;AAAA,EACrE,YAAY;AAAA,IACV,eAAe;AAAA,MACb,gBAAgB;AAAA,QACd,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,SAAS,CAAC,YAAY;AAAA,MACpB,GAAG;AAAA,MACH,SAAS;AAAA,QACP,QAAQ;AAAA,QACR,sBAAsB;AAAA,QACtB,QAAQ;AAAA,QACR,QAAQ;AAAA,MACV;AAAA,MACA,WAAW;AAAA,QACT,QAAQ;AAAA,QACR,wBAAwB;AAAA,MAC1B;AAAA,IACF;AAAA,IACA,WAAW,CAAC,YAAY;AAAA,MACtB,GAAG;AAAA,IACL;AAAA,IACA,eAAe,CAAC,YAAY;AAAA,MAC1B,GAAG;AAAA,IACL;AAAA,IACA,QAAQ,CAAC;AAAA,EACX;AACF,CAAC;;;AChCD,oBAA2C;AAE3C,IAAO,iCAAQ,0CAA2B,OAAO;AAAA,EAC/C,OAAO;AAAA,IACL,SAAS;AAAA,MACP,WAAW;AAAA,QACT,YAAY,OAAO,EAAE,WAAW,MAAM;AAAA,QAAC;AAAA,MACzC;AAAA,IACF;AAAA,IACA,WAAW,CAAC;AAAA,EACd;AACF,EAAE;;;AHAF,IAAM,YAAY,uBAAW,QAAQ;AAAA,EACnC,cAAc;AAAA,EACd,KAAK;AACP,CAAC;AAED,IAAM,UAAU,uBAAW,QAAQ;AAAA,EACjC,IAAI;AAAA,EACJ,cAAc;AAAA,EACd,KAAK;AAAA,EACL,eAAe;AAAA,IACb,wBAAwB;AAAA,EAC1B;AACF,CAAC;AAED,IAAM,KAAK,uBAAW,OAAO;AAAA,EAC3B,cAAc;AAAA,EACd,gBAAgB;AAClB,CAAC;AAAA,IAGD,6CAAgC;AAAA,EAC9B,MAAM,CAAC,WAAW,IAAI,OAAO;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAM;AAAA,IACJ,GAAG,iBAAK;AAAA,IACR,gBACE,QAAQ,IAAI,aAAa,eACrB;AAAA,MAEE,IAAI,gCAAoB,cAAc;AAAA,MACtC;AAAA,MACA;AAAA,IACF,IACA;AAAA,MACE;AAAA,MACA,IAAI,gCAAoB,mBAAmB;AAAA,IAC7C;AAAA,EACR;AAAA,EACA,UAAU;AAAA,IACR,uBACE,QAAQ,IAAI,aAAa,gBACzB,QAAQ,IAAI,wBAAwB;AAAA,EACxC;AACF,CAAC;",
  "names": ["import_sdk", "import_sdk"]
}
