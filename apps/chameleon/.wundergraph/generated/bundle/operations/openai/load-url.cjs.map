{
  "version": 3,
  "sources": ["../../../../operations/openai/load-url.ts", "../../../wundergraph.factory.ts"],
  "sourcesContent": ["import { createOperation, z } from '../../generated/wundergraph.factory';\n\nexport default createOperation.query({\n  input: z.object({\n    url: z.string(),\n  }),\n  response: z.object({\n    content: z.string(),\n  }),\n  description: 'Load the content of a url',\n  handler: async ({ input, log }) => {\n    log.debug('Loading url', input.url);\n    const data = await fetch(input.url).then((res) => res.text());\n    log.debug('Loaded url', input.url);\n    return {\n      content: data,\n    };\n  },\n});\n", "// Code generated by wunderctl. DO NOT EDIT.\n\nimport type { InternalClient } from \"./wundergraph.internal.client\";\nimport type { InternalOperationsClient } from \"./wundergraph.internal.operations.client\";\nimport type { ORM } from './orm'\nimport type { Role } from \"./wundergraph.server\";\nimport type { CustomClaims } from \"./claims\";\nimport { createOperationFactory } from \"@wundergraph/sdk/operations\";\n\n\nimport type server from '../wundergraph.server';\n\ntype ContextField = Required<Required<Required<typeof server>['context']>['request']>['create'];\nexport type ContextType = ContextField extends (...args: any) => any ? Awaited<ReturnType<ContextField>> : never;\n\n\n\nimport type { Queries, Mutations } from \"./jsonschema\";\nimport type { IOpenaiAgentFactory } from \"@wundergraph/sdk/openai\"\nexport type QueriesAndMutations = Queries & Mutations;\nexport type OpenApiAgentFactory = IOpenaiAgentFactory<QueriesAndMutations>;\n\nexport { z, AuthorizationError } from \"@wundergraph/sdk/operations\";\nexport const createOperation = createOperationFactory<InternalClient, Role, CustomClaims, InternalOperationsClient, ORM, OpenApiAgentFactory, ContextType>();"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACOA,wBAAuC;AAevC,IAAAA,qBAAsC;AAC/B,IAAM,sBAAkB,0CAA4H;;;ADrB3J,IAAO,mBAAQ,gBAAgB,MAAM;AAAA,EACnC,OAAO,qBAAE,OAAO;AAAA,IACd,KAAK,qBAAE,OAAO;AAAA,EAChB,CAAC;AAAA,EACD,UAAU,qBAAE,OAAO;AAAA,IACjB,SAAS,qBAAE,OAAO;AAAA,EACpB,CAAC;AAAA,EACD,aAAa;AAAA,EACb,SAAS,OAAO,EAAE,OAAO,IAAI,MAAM;AACjC,QAAI,MAAM,eAAe,MAAM,GAAG;AAClC,UAAM,OAAO,MAAM,MAAM,MAAM,GAAG,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC;AAC5D,QAAI,MAAM,cAAc,MAAM,GAAG;AACjC,WAAO;AAAA,MACL,SAAS;AAAA,IACX;AAAA,EACF;AACF,CAAC;",
  "names": ["import_operations"]
}
