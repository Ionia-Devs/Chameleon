// Code generated by wunderctl. DO NOT EDIT.

import type {
  BaseRequestContext,
  CustomContext,
  GraphQLServerConfig,
  WunderGraphHooksAndServerConfig,
  WunderGraphServerConfig,
  WunderGraphUser,
} from '@wundergraph/sdk/server'

import type { CustomClaims } from './claims'
import type { HooksConfig } from './wundergraph.hooks'
import type { InternalOperationsClient } from './wundergraph.internal.operations.client'
import type { WebhooksConfig } from './wundergraph.webhooks'

export type Role = 'admin' | 'user'

export interface User extends WunderGraphUser<Role, CustomClaims> {}

/**
 * We extract the custom context defined by the user
 */
type RequestContext = CustomContext extends { request: infer R } ? R : any
type GlobalContext = CustomContext extends { global: infer G } ? G : any

/**
 * Can be used for custom GraphQL server execution context
 * @see https://docs.wundergraph.com/docs/wundergraph-server-ts-reference/custom-graphql-servers
 */
export interface GraphQLExecutionContext {
  wundergraph: BaseRequestContext<
    User,
    InternalOperationsClient,
    RequestContext
  >
}

declare module '@wundergraph/sdk/server' {
  export function configureWunderGraphServer(
    configWrapper: () => WunderGraphServerConfig<
      HooksConfig<RequestContext>,
      WebhooksConfig,
      RequestContext,
      GlobalContext
    >
  ): WunderGraphHooksAndServerConfig<any, any, RequestContext, GlobalContext>
}
