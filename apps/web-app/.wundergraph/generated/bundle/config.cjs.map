{
  "version": 3,
  "sources": ["../../wundergraph.config.ts", "../../wundergraph.generate.ts", "../../wundergraph.operations.ts", "../../wundergraph.server.ts"],
  "sourcesContent": ["import {\n  EnvironmentVariable,\n  configureWunderGraphApplication,\n  cors,\n  introspect,\n} from \"@wundergraph/sdk\"\n\nimport generate from \"./wundergraph.generate\"\nimport operations from \"./wundergraph.operations\"\nimport server from \"./wundergraph.server\"\n\nconst countries = introspect.graphql({\n  apiNamespace: \"countries\",\n  url: \"https://countries.trevorblades.com/\",\n})\n\nconst weather = introspect.graphql({\n  id: \"weather\",\n  apiNamespace: \"weather\",\n  url: \"https://weather-api.wundergraph.com/\",\n  introspection: {\n    pollingIntervalSeconds: 5,\n  },\n})\n\nconst db = introspect.prisma({\n  apiNamespace: \"db\",\n  prismaFilePath: \"../../../data-access/db/prisma/schema.prisma\",\n})\n\n// configureWunderGraph emits the configuration\nconfigureWunderGraphApplication({\n  apis: [countries, db, weather],\n  server,\n  operations,\n  generate,\n  cors: {\n    ...cors.allowAll,\n    allowedOrigins:\n      process.env.NODE_ENV === \"production\"\n        ? [\n            // change this before deploying to production to the actual domain where you're deploying your app\n            new EnvironmentVariable(\"NEXTAUTH_URL\"),\n            \"https://www.chameleon.com\",\n            \"https://chameleon-production.up.railway.app/\",\n          ]\n        : [\n            \"http://localhost:3000\",\n            new EnvironmentVariable(\"WG_ALLOWED_ORIGIN\"),\n          ],\n  },\n  security: {\n    enableGraphQLEndpoint:\n      process.env.NODE_ENV !== \"production\" ||\n      process.env.GITPOD_WORKSPACE_ID !== undefined,\n  },\n})\n", "import { configureWunderGraphGeneration } from \"@wundergraph/sdk\"\n\nexport default configureWunderGraphGeneration({\n  codeGenerators: [],\n  operationsGenerator: (config) => {\n    config.includeNamespaces(\"\")\n  },\n})\n", "import { configureWunderGraphOperations } from \"@wundergraph/sdk\"\n\nimport type { OperationsConfiguration } from \"./generated/wundergraph.operations\"\n\nexport default configureWunderGraphOperations<OperationsConfiguration>({\n  operations: {\n    defaultConfig: {\n      authentication: {\n        required: false,\n      },\n    },\n    queries: (config) => ({\n      ...config,\n      caching: {\n        enable: false,\n        staleWhileRevalidate: 5,\n        maxAge: 10,\n        public: true,\n      },\n      liveQuery: {\n        enable: true,\n        pollingIntervalSeconds: 1,\n      },\n    }),\n    mutations: (config) => ({\n      ...config,\n    }),\n    subscriptions: (config) => ({\n      ...config,\n    }),\n    custom: {},\n  },\n})\n", "import { configureWunderGraphServer } from \"@wundergraph/sdk/server\"\n\nexport default configureWunderGraphServer(() => ({\n  hooks: {\n    queries: {\n      Countries: {\n        preResolve: async ({ operations }) => {},\n      },\n    },\n    mutations: {},\n  },\n}))\n"],
  "mappings": "aAAA,IAAAA,EAKO,4BCLP,IAAAC,EAA+C,4BAExCC,KAAQ,kCAA+B,CAC5C,eAAgB,CAAC,EACjB,oBAAsBC,GAAW,CAC/BA,EAAO,kBAAkB,EAAE,CAC7B,CACF,CAAC,ECPD,IAAAC,EAA+C,4BAIxCC,KAAQ,kCAAwD,CACrE,WAAY,CACV,cAAe,CACb,eAAgB,CACd,SAAU,EACZ,CACF,EACA,QAAUC,IAAY,CACpB,GAAGA,EACH,QAAS,CACP,OAAQ,GACR,qBAAsB,EACtB,OAAQ,GACR,OAAQ,EACV,EACA,UAAW,CACT,OAAQ,GACR,uBAAwB,CAC1B,CACF,GACA,UAAYA,IAAY,CACtB,GAAGA,CACL,GACA,cAAgBA,IAAY,CAC1B,GAAGA,CACL,GACA,OAAQ,CAAC,CACX,CACF,CAAC,EChCD,IAAAC,EAA2C,mCAEpCC,KAAQ,8BAA2B,KAAO,CAC/C,MAAO,CACL,QAAS,CACP,UAAW,CACT,WAAY,MAAO,CAAE,WAAAC,CAAW,IAAM,CAAC,CACzC,CACF,EACA,UAAW,CAAC,CACd,CACF,EAAE,EHAF,IAAMC,EAAY,aAAW,QAAQ,CACnC,aAAc,YACd,IAAK,qCACP,CAAC,EAEKC,EAAU,aAAW,QAAQ,CACjC,GAAI,UACJ,aAAc,UACd,IAAK,uCACL,cAAe,CACb,uBAAwB,CAC1B,CACF,CAAC,EAEKC,EAAK,aAAW,OAAO,CAC3B,aAAc,KACd,eAAgB,8CAClB,CAAC,KAGD,mCAAgC,CAC9B,KAAM,CAACF,EAAWE,EAAID,CAAO,EAC7B,OAAAE,EACA,WAAAC,EACA,SAAAC,EACA,KAAM,CACJ,GAAG,OAAK,SACR,eACE,QAAQ,IAAI,WAAa,aACrB,CAEE,IAAI,sBAAoB,cAAc,EACtC,4BACA,8CACF,EACA,CACE,wBACA,IAAI,sBAAoB,mBAAmB,CAC7C,CACR,EACA,SAAU,CACR,sBACE,QAAQ,IAAI,WAAa,cACzB,QAAQ,IAAI,sBAAwB,MACxC,CACF,CAAC",
  "names": ["import_sdk", "import_sdk", "wundergraph_generate_default", "config", "import_sdk", "wundergraph_operations_default", "config", "import_server", "wundergraph_server_default", "operations", "countries", "weather", "db", "wundergraph_server_default", "wundergraph_operations_default", "wundergraph_generate_default"]
}
