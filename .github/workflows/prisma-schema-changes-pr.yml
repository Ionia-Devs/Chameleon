name: Prisma Schema Automation

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/schema.prisma'
    types: [opened, reopened, synchronize]
  pull_request_target:
    branches:
      - main
    paths:
      - '**/schema.prisma'
    types: [closed]

jobs:
  check-schema-changes:
    runs-on: ubuntu-latest
    outputs:
      schema_changed: ${{ steps.schema-change-detection.outputs.schema_changed }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 2 # Fetch the last two commits

      - name: Detect Schema Changes
        id: schema-change-detection
        run: |
          # Compare the schema file between the last two commits
          SCHEMA_CHANGE=$(git diff --name-only HEAD^ HEAD -- '**/schema.prisma')
          if [ -z "$SCHEMA_CHANGE" ]; then
            echo "No schema changes detected."
            echo "::set-output name=schema_changed::false"
          else
            echo "Schema changes detected."
            echo "::set-output name=schema_changed::true"
          fi

  comment-on-pr:
    needs: check-schema-changes
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' && needs.check-schema-changes.outputs.schema_changed == 'true' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Check if env file exists
        id: check-env-file
        run: |
          REF=${{ github.event.pull_request.head.ref }}
          FILE_PATH=".pscale/env/ps-env-$REF.sh"
          if [ -f "$FILE_PATH" ]; then
            echo "Env file exists."
            echo "::set-output name=env_file_exists::true"
          else
            echo "Env file does not exist."
            echo "::set-output name=env_file_exists::false"
          fi

      - name: Comment /ps-create or /ps-update on PR
        uses: actions/github-script@v6
        with:
          script: |
            const issue_number = context.issue.number;
            const envFileExists = ${{ steps.check-env-file.outputs.env_file_exists }};
            const message = envFileExists ? '/ps-update' : '/ps-create';
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: message,
            });
          github-token: ${{secrets.CHAMELEON_BOT}}
