name: Create a Branch
env:
  pscale_base_directory: .pscale
on:
  pull_request:
    paths:
      - 'data-access/db/prisma/schema.prisma'
    types: [opened, closed]

jobs:
  Create_DB:
    runs-on: ubuntu-latest
    steps:
      - name: Create DB branch and deploy request- if asked, please click on displayed link to authenticate
        id: create-db-branch-and-dr
        timeout-minutes: 5
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{secrets.PLANETSCALE_SERVICE_TOKEN_ID}}
          PLANETSCALE_SERVICE_TOKEN: ${{secrets.PLANETSCALE_SERVICE_TOKEN}}
          DB_NAME: ${{secrets.DB_NAME}}
          ORG_NAME: ${{secrets.ORG_NAME}}
          GITHUB_USER: ${{github.actor}}
          DDL_STATEMENTS: ""
          BRANCH_NAME: testbranch
        working-directory: .pscale/cli-helper-scripts/
        run: | 
          ./create-db-branch-dr-and-connection.sh "testbranch" ""

  merge_changes:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Create a deploy request
        uses: planetscale/create-deploy-request-action@v1
        id: create_deploy_request
        with:
          org_name: ${{secrets.ORG_NAME}}
          database_name: ${{secrets.DB_NAME}}
          branch_name: ${{ github.event.pull_request.head.ref }}
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      - name: Deploy a deploy request
        uses: planetscale/deploy-deploy-request-action@v1
        with:
          org_name: ${{secrets.ORG_NAME}}
          database_name: testbranch
          number: ${{ steps.create_deploy_request.outputs.number }}
          wait: true
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
