name: Create a Branch
on:
  pull_request:
    paths:
      - 'data-access/db/prisma/schema.prisma'
    types: [opened, synchronize, closed]

jobs:
  create_a_branch:
    runs-on: ubuntu-latest
    if: github.event.pull_request.state == 'open' || github.event.pull_request.state == 'synchronize'
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Create a branch
        uses: planetscale/create-branch-action@v4
        id: create_branch
        with:
          org_name: ${{secrets.ORG_NAME}}
          database_name: ${{secrets.DB_NAME}}
          branch_name: testbranch
          from: main
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      - name: Create branch password
        uses: planetscale/create-branch-password-action@v1
        id: create_branch_password
        with:
          org_name: ${{secrets.ORG_NAME}}
          database_name: ${{secrets.DB_NAME}}
          branch_name: testbranch
          name: 'pass-testbranch'
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      - name: Get the new credentials
        run: |
          echo "Hostname: ${{ steps.create_branch_password.outputs.hostname}}"
          echo "Username: ${{ steps.create_branch_password.outputs.username}}"
          echo "Password: ${{ steps.create_branch_password.outputs.password}}"
      - name: Create Branch Connection String
        id: branch_connections_string
        working-directory: .pscale/cli-helper-scripts/
        run: ./create-branch-connection-string.sh
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{secrets.PLANETSCALE_SERVICE_TOKEN_ID}}
          DB_NAME: ${{secrets.DB_NAME}}
          BRANCH_NAME: testbranch 
          ORG_NAME: ${{secrets.ORG_NAME}}
          CREDS: creds-testbranch

      - name: what is this
        run: echo ${{steps.branch_connections_string.outputs}}

  merge_changes:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Create a deploy request
        uses: planetscale/create-deploy-request-action@v1
        id: create_deploy_request
        with:
          org_name: ${{secrets.ORG_NAME}}
          database_name: ${{secrets.DB_NAME}}
          branch_name: ${{ github.event.pull_request.head.ref }}
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      - name: Deploy a deploy request
        uses: planetscale/deploy-deploy-request-action@v1
        with:
          org_name: ${{secrets.ORG_NAME}}
          database_name: testbranch
          number: ${{ steps.create_deploy_request.outputs.number }}
          wait: true
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
